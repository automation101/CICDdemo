{"ast":null,"code":"import _classCallCheck from\"/Users/ppatel/code-challenge-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ppatel/code-challenge-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/ppatel/code-challenge-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/ppatel/code-challenge-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/ppatel/code-challenge-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import axios from'axios';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(){var _getPrototypeOf2;var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(App)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={posts:[],isLoading:true,errors:null};return _this;}_createClass(App,[{key:\"getPosts\",// Now we're going to make a request for data using axios\nvalue:function getPosts(){var _this2=this;axios// This is where the data is hosted\n.get(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/3/posts.json\")// Once we get a response and store data, let's change the loading state\n.then(function(response){_this2.setState({posts:response.data.posts,isLoading:false});})// If we catch any errors connecting, let's update accordingly\n.catch(function(error){return _this2.setState({error:error,isLoading:false});});}// Let's our app know we're ready to render the data\n},{key:\"componentDidMount\",value:function componentDidMount(){this.getPosts();}// Putting that data to use\n},{key:\"render\",value:function render(){var _this$state=this.state,isLoading=_this$state.isLoading,posts=_this$state.posts;return React.createElement(React.Fragment,null,React.createElement(\"h2\",null,\"Random Post\"),React.createElement(\"div\",null,!isLoading?posts.map(function(post){var _id=post._id,title=post.title,content=post.content;return React.createElement(\"div\",{key:_id},React.createElement(\"h2\",null,title),React.createElement(\"p\",null,content),React.createElement(\"hr\",null));}):React.createElement(\"p\",null,\"Loading...\")));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/ppatel/code-challenge-master/src/App.js"],"names":["React","Component","axios","App","state","posts","isLoading","errors","get","then","response","setState","data","catch","error","getPosts","map","post","_id","title","content"],"mappings":"gxBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,GAEMC,CAAAA,G,+XAEJC,K,CAAQ,CACNC,KAAK,CAAE,EADD,CAENC,SAAS,CAAE,IAFL,CAGNC,MAAM,CAAE,IAHF,C,iDAKR;yBACW,iBACTL,KACE;AADG,CAEFM,GAFH,CAEO,2DAFP,CAGE;AAHF,CAIGC,IAJH,CAIQ,SAAAC,QAAQ,CAAI,CAChB,MAAI,CAACC,QAAL,CAAc,CACZN,KAAK,CAAEK,QAAQ,CAACE,IAAT,CAAcP,KADT,CAEZC,SAAS,CAAE,KAFC,CAAd,EAID,CATH,CAUE;AAVF,CAWGO,KAXH,CAWS,SAAAC,KAAK,QAAI,CAAA,MAAI,CAACH,QAAL,CAAc,CAAEG,KAAK,CAALA,KAAF,CAASR,SAAS,CAAE,KAApB,CAAd,CAAJ,EAXd,EAYD,CACD;6DACoB,CAClB,KAAKS,QAAL,GACD,CACD;uCACS,iBACsB,KAAKX,KAD3B,CACCE,SADD,aACCA,SADD,CACYD,KADZ,aACYA,KADZ,CAEP,MACE,qBAAC,KAAD,CAAO,QAAP,MACE,4CADF,CAEE,+BACG,CAACC,SAAD,CACCD,KAAK,CAACW,GAAN,CAAU,SAAAC,IAAI,CAAI,IACRC,CAAAA,GADQ,CACgBD,IADhB,CACRC,GADQ,CACHC,KADG,CACgBF,IADhB,CACHE,KADG,CACIC,OADJ,CACgBH,IADhB,CACIG,OADJ,CAEhB,MACE,4BAAK,GAAG,CAAEF,GAAV,EACE,8BAAKC,KAAL,CADF,CAEE,6BAAIC,OAAJ,CAFF,CAGE,8BAHF,CADF,CAOD,CATD,CADD,CAYC,0CAbJ,CAFF,CADF,CAqBD,C,iBAlDepB,KAAK,CAACC,S,EAqDxB,cAAeE,CAAAA,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  // State will apply to the posts object which is set to loading by default\n  state = {\n    posts: [],\n    isLoading: true,\n    errors: null\n  };\n  // Now we're going to make a request for data using axios\n  getPosts() {\n    axios\n      // This is where the data is hosted\n      .get(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/3/posts.json\")\n      // Once we get a response and store data, let's change the loading state\n      .then(response => {\n        this.setState({\n          posts: response.data.posts,\n          isLoading: false\n        });\n      })\n      // If we catch any errors connecting, let's update accordingly\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n  // Let's our app know we're ready to render the data\n  componentDidMount() {\n    this.getPosts();\n  }\n  // Putting that data to use\n  render() {\n    const { isLoading, posts } = this.state;\n    return (\n      <React.Fragment>\n        <h2>Random Post</h2>\n        <div>\n          {!isLoading ? (\n            posts.map(post => {\n              const { _id, title, content } = post;\n              return (\n                <div key={_id}>\n                  <h2>{title}</h2>\n                  <p>{content}</p>\n                  <hr />\n                </div>\n              );\n            })\n          ) : (\n            <p>Loading...</p>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}